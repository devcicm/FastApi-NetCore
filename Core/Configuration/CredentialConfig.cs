namespace FastApi_NetCore.Core.Configuration
{
    /// <summary>
    /// Configuraci√≥n para el servicio de credenciales
    /// </summary>
    public class CredentialConfig
    {
        // ===================================
        // üîë JWT TOKEN SETTINGS
        // ===================================
        
        /// <summary>
        /// Tiempo de expiraci√≥n de tokens JWT en minutos (por defecto: 60 minutos)
        /// </summary>
        public int JwtExpirationMinutes { get; set; } = 60;
        
        /// <summary>
        /// Issuer para los tokens JWT
        /// </summary>
        public string JwtIssuer { get; set; } = "FastApi_NetCore";
        
        /// <summary>
        /// Audience para los tokens JWT
        /// </summary>
        public string JwtAudience { get; set; } = "FastApi_NetCore";

        // ===================================
        // üîÑ REFRESH TOKEN SETTINGS
        // ===================================
        
        /// <summary>
        /// Tiempo de expiraci√≥n de refresh tokens en d√≠as (por defecto: 30 d√≠as)
        /// </summary>
        public int RefreshTokenExpirationDays { get; set; } = 30;
        
        /// <summary>
        /// Permite m√∫ltiples refresh tokens activos por usuario
        /// </summary>
        public bool AllowMultipleRefreshTokens { get; set; } = false;

        // ===================================
        // üóùÔ∏è API KEY SETTINGS
        // ===================================
        
        /// <summary>
        /// Tiempo de expiraci√≥n por defecto de API Keys en d√≠as (por defecto: 365 d√≠as)
        /// </summary>
        public int ApiKeyExpirationDays { get; set; } = 365;
        
        /// <summary>
        /// N√∫mero m√°ximo de API Keys que puede tener un usuario
        /// </summary>
        public int MaxApiKeysPerUser { get; set; } = 10;
        
        /// <summary>
        /// Prefijo para los API Keys generados
        /// </summary>
        public string ApiKeyPrefix { get; set; } = "fapi_";

        // ===================================
        // üîê SECURITY SETTINGS
        // ===================================
        
        /// <summary>
        /// Habilita rotaci√≥n autom√°tica de refresh tokens
        /// </summary>
        public bool EnableRefreshTokenRotation { get; set; } = true;
        
        /// <summary>
        /// Tiempo en minutos para considerar un token como "pr√≥ximo a expirar"
        /// </summary>
        public int TokenExpirationWarningMinutes { get; set; } = 10;
        
        /// <summary>
        /// Habilita logging detallado de operaciones de autenticaci√≥n
        /// </summary>
        public bool EnableDetailedAuthLogging { get; set; } = true;

        // ===================================
        // üéØ RATE LIMITING FOR AUTH ENDPOINTS
        // ===================================
        
        /// <summary>
        /// L√≠mite de intentos de login por IP por minuto
        /// </summary>
        public int LoginAttemptsPerMinute { get; set; } = 10;
        
        /// <summary>
        /// L√≠mite de generaci√≥n de API Keys por usuario por d√≠a
        /// </summary>
        public int ApiKeyGenerationPerDay { get; set; } = 5;
        
        /// <summary>
        /// L√≠mite de refresh de tokens por usuario por minuto
        /// </summary>
        public int TokenRefreshPerMinute { get; set; } = 5;

        // ===================================
        // üóÑÔ∏è PERSISTENCE SETTINGS
        // ===================================
        
        /// <summary>
        /// Tipo de almacenamiento para tokens (InMemory, Database, Redis, etc.)
        /// </summary>
        public string StorageType { get; set; } = "InMemory";
        
        /// <summary>
        /// Cadena de conexi√≥n para almacenamiento externo
        /// </summary>
        public string ConnectionString { get; set; } = string.Empty;
        
        /// <summary>
        /// Tiempo en d√≠as para limpiar tokens expirados autom√°ticamente
        /// </summary>
        public int CleanupExpiredTokensDays { get; set; } = 7;

        // ===================================
        // üåê CORS AND EXTERNAL ACCESS
        // ===================================
        
        /// <summary>
        /// Or√≠genes permitidos para endpoints de autenticaci√≥n
        /// </summary>
        public string[] AllowedOrigins { get; set; } = Array.Empty<string>();
        
        /// <summary>
        /// Habilita endpoints de validaci√≥n externa de tokens
        /// </summary>
        public bool EnableExternalTokenValidation { get; set; } = true;
        
        /// <summary>
        /// Clave para validaci√≥n externa (diferente a la clave de generaci√≥n)
        /// </summary>
        public string? ExternalValidationKey { get; set; }

        // ===================================
        // üìä MONITORING AND METRICS
        // ===================================
        
        /// <summary>
        /// Habilita m√©tricas de autenticaci√≥n
        /// </summary>
        public bool EnableAuthMetrics { get; set; } = true;
        
        /// <summary>
        /// Habilita alertas por intentos de autenticaci√≥n sospechosos
        /// </summary>
        public bool EnableSecurityAlerts { get; set; } = true;
    }
}